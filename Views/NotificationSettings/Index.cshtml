@model NotificationSettingsViewModel
@using OrchardCore.Notifications.ViewModels;

@{
    int startIndex = (Model.Pager.Page - 1) * (Model.Pager.PageSize) + 1;
    int endIndex = startIndex + Model.Notifications.Count - 1;
}
<script asp-name="bootstrap-select" depends-on="admin" at="Foot"></script>


<h1>@RenderTitleSegments(T["Manage Notifications"])</h1>

<form asp-action="Index" id="workflows-types-form" method="post">
    <input type="submit" name="submit.Filter" id="submitFilter" class="d-none" />
    <input type="submit" name="submit.BulkAction" class="d-none" />
    @*<input asp-for="Options.BulkAction" type="hidden" />*@

    <ul class="list-group with-checkbox">
        <li class="list-group-item bg-primary">
            <div class="row">
                <div class="form-group col mb-n1 text-nowrap">
                    <div class="custom-control custom-checkbox mt-2 mr-n2">
                        <input type="checkbox" class="custom-control-input" id="select-all">
                        <label class="custom-control-label" for="select-all" id="select-all-label" title="@T["Select All"]"></label>
                        <label id="items" for="select-all">@T.Plural(Model.Notifications.Count, "1 item", "{0} items")<span class="text-muted" title="@T["Items {0} to {1}", startIndex, endIndex]">@T.Plural((int)Model.Pager.TotalItemCount, " / {0} item in total", " / {0} items in total")</span></label>
                        <label id="selected-items" class="text-muted" for="select-all"></label>
                    </div>
                </div>
                <div class="form-group col-2 mb-n1" style="display:none" id="actions">
                    <span class="dropdown float-right mt-1">
                        <button class="btn btn-sm btn-light dropdown-toggle" type="button" id="bulk-action-menu-button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            @T["Actions"]
                        </button>
                        <span class="dropdown-menu dropdown-menu-right" aria-labelledby="bulk-action-menu-button">
                            @* @foreach (var item in Model.Options.WorkflowTypesBulkAction)
                            {
                                <a class="dropdown-item" href="javascript:void(0)" data-action="@item.Value" data-title="@T["Bulk Action"]" data-message="@T["Are you sure you want to {0} these items?", @item.Text.ToLower()]">@item.Text</a>
                            } *@
                        </span>
                    </span>
                </div>
            </div>
        </li>
        @if (Model.Notifications.Any())
        {
            @for (var i = 0; i < Model.Notifications.Count; i++)
            {
                var entry = Model.Notifications[i];
                <li class="list-group-item">
                    <div class="properties">
                        <div class="related">
                            @if(entry.Enabled)
                            {
                                <a asp-action="DisableNotifcation" asp-controller="NotificationSettings" asp-area="OrchardCore.Notifications" asp-route-id="@entry.Id" class="btn btn-danger btn-sm">@T["Disable"]</a>
                            }
                            else
                            {
                                <a asp-action="EnableNotification" asp-controller="NotificationSettings" asp-area="OrchardCore.Notifications" asp-route-id="@entry.Id" class="btn btn-success btn-sm">@T["Enable"]</a>
                            }
                            <a asp-action="Edit" asp-route-id="@entry.Id" asp-controller="NotificationSettings" asp-area="OrchardCore.Notifications" asp-route-returnUrl="@FullRequestPath" class="btn btn-primary btn-sm">@T["Edit Notification"]</a>
                        </div>

                        <div class="custom-control custom-checkbox float-left">
                            <input type="checkbox" class="custom-control-input" value="@entry.Id" name="itemIds" id="itemIds-@entry.Id">
                            <label class="custom-control-label" for="itemIds-@entry.Id"></label>
                        </div>
                        <a asp-action="Edit" asp-route-id="@entry.Id" asp-controller="NotificationSettings" asp-area="OrchardCore.Notifications" asp-route-returnUrl="@FullRequestPath">@entry.Name</a>

                        <div class="metadata">
                            @*@if (entry.WorkflowCount > 0)
                            { TODO: Notification history
                                <a asp-action="Index" asp-controller="Workflow" asp-route-workflowtypeid="@entry.Id" class="badge badge-info">@T.Plural(entry.WorkflowCount, "1 instance", "{0} instances")</a>
                            }*@
                        </div>
                    </div>
                </li>
            }
        }
        else
        {
            <li class="list-group-item">
                <div class="alert alert-info" role="alert">
                    @T["<strong>Nothing here!</strong> Your search returned no results."]
                </div>
            </li>
        }
    </ul>
</form>

@await DisplayAsync(Model.Pager)



<script at="Foot">
    $(function () {
        $('select').selectpicker();

        var actions = $("#actions");
        var items = $("#items");
        var filters = $(".filter");
        var selectAllCtrl = $("#select-all");
        var selectedItems = $("#selected-items");
        var itemsCheckboxes = $(":checkbox[name='itemIds']");

        $(".filter-options input").on("change", function () {
            $("[name='submit.Filter']").click();
        });

        $(".dropdown-menu .dropdown-item").filter(function() {
            return $(this).data("action");
        }).on("click", function () {
            if ($(":checkbox[name='itemIds']:checked").length > 1) {
                var $this = $(this);
                confirmDialog({title: $this.data('title'), message: $this.data('message'), callback: function(r) {
                    if (r) {
                        $("[name='Options.BulkAction']").val($this.data("action"));
                        $("[name='submit.BulkAction']").click();
                    }
                }});
            }
        });

        function displayActionsOrFilters() {
            if ($(":checkbox[name='itemIds']:checked").length > 1) {
                actions.show();
                filters.hide();
                selectedItems.show();
                items.hide();
            }
            else {
                actions.hide();
                filters.show();
                selectedItems.hide();
                items.show();
            }
        }

        selectAllCtrl.click(function(){
            itemsCheckboxes.not(this).prop("checked", this.checked);
            selectedItems.text($(":checkbox[name='itemIds']:checked").length + ' @T["selected"]');
            displayActionsOrFilters();
        });

        itemsCheckboxes.on("click", function () {
            var itemsCount = $(":checkbox[name='itemIds']").length;
            var selectedItemsCount = $(":checkbox[name='itemIds']:checked").length;

            selectAllCtrl.prop("checked", selectedItemsCount == itemsCount);
            selectAllCtrl.prop("indeterminate", selectedItemsCount > 0 && selectedItemsCount < itemsCount);
            
            selectedItems.text(selectedItemsCount + ' @T["selected"]');
            displayActionsOrFilters();
        });
    });
</script>